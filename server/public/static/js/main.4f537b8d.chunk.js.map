{"version":3,"sources":["models/ActiveView.ts","models/GamePhase.ts","store/views.reducer.ts","store/misc.reducer.ts","store/gameBoard.reducer.ts","store/socketListners.ts","store/socketMiddleware.ts","pages/JoinPage.tsx","pages/CreateGamePage.tsx","models/territoryTypes.ts","pages/WaitingForPlayersPage.tsx","components/QA/sampleGameObject.js","components/QA/samplePLayersArray.js","components/QA/QaBar.jsx","models/troopTypes.ts","components/GameMap/subComponents/SingleTerritory.tsx","components/GameMap/GameMap.tsx","components/CommandSheet/CommandSheetRow.tsx","components/CommandSheet/SproutTroopRow.tsx","components/CommandSheet/CommandSheet.tsx","components/TopBar/TopBar.tsx","services/time.ts","pages/PlayPage.tsx","pages/SummaryPage.tsx","App.tsx","serviceWorker.ts","index.tsx","store/configureStore.ts"],"names":["ActiveViewEnum","GamePhaseEnum","debellatioSetView","payload","type","storeInit","activeView","Join","gamePhase","GameMaster","viewsReducer","state","arguments","length","undefined","action","_objectSpread","debellatioSetGameCode","debellatioSetPlayers","gameCode","players","miscReducer","misc_reducer_objectSpread","Object","toConsumableArray","debellatioUpdateBoard","debellatioUpdatePlayerID","countryID","season","armies","territories","settings","stage","timeLeft","winner","gameBoredReducer","gameBoard_reducer_objectSpread","seasonLength","socketListners","dispatch","event","fn","message","WaitingForPlayers","socketListners_objectSpread","PLayPage","setInterval","Summary","sendSocketMessage","msgType","msgVal","store_socketMiddleware","_ref","socket","openSocket","process","on","msg","localStorage","setItem","id","roomId","forEach","socketListner","next","emit","connect","goToCreateGame","CreateGame","joinGame","_useState","useState","_useState2","slicedToArray","name","setname","_useState3","_useState4","gamePin","setGamePin","react_default","a","createElement","className","placeholder","value","onChange","e","target","onClick","TerritoryTypeEnum","useStyles","makeStyles","buttonRoot","color","width","height","padding","sliderRoot","switchBase","&$checked","colorSecondary","&$checked + $track","backgroundColor","opacity","checked","left","track","thumb","sliderThumb","marginTop","marginLeft","border","valueLabel","rail","borderRadius","mark","goToJoinGame","createGame","_React$useState","React","longYear","maxPlayers","firstSeason","gmMode","_React$useState2","setState","classes","handleSwitchChange","CreateGamePage_objectSpread","defineProperty","handleSliderChange","newValue","Slider","min","max","step","marks","valueLabelDisplay","root","Switch","disableRipple","GM","joinCode","misc","startGame","gameId","map","player","key","sampleGameObject","balance","seasonsPerYear","capital","borders","troop","army","country","samplePLayersArray","goToPlayPage","goToWaiting","goToSpectator","goToWinner","goToSprout","closed","setClosed","TroopTypesEnum","SingleTerritory","gridRow","toString","Sea","City","Port","troopImg","style","gridArea","src","concat","alt","board","territory","GameMap_subComponents_SingleTerritory","troopId","commandList","order","setOrder","setTarget","_useState5","_useState6","auxUnit","setAuxUnit","tank","ship","Coast","Land","Math","random","parseInt","neighbor","allowedActions","_ref$sprout","sprout","actionParam","commandCount","commands","armyBalance","submitCommands","submitSprout","waitForPlayers","dispatchOrders","dispatchSprout","view","territoryId","components_CommandSheet_CommandSheetRow","buildNew","abs","components_CommandSheet_SproutTroopRow","getCommandSheetView","playerName","playerId","isGm","phase","year","floor","phaseToSeason","time","secs","padStart","timeToSec","components_TopBar_TopBar","components_GameMap_GameMap","components_CommandSheet_CommandSheet","removeItem","toLowerCase","views","rejoin","gameOver","getItem","socketId","pages_JoinPage","pages_CreateGamePage","pages_WaitingForPlayersPage","pages_PlayPage","pages_SummaryPage","getActiveView","Fragment","Boolean","window","location","hostname","match","store","middlewareEnhancer","applyMiddleware","apply","socketMdl","composedEnhancers","composeWithDevTools","rootReducer","combineReducers","createStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f537b8d.chunk.js","sourcesContent":["export enum ActiveViewEnum {\r\n  Join,\r\n  CreateGame,\r\n  WaitingForPlayers,\r\n  PLayPage,\r\n  Summary\r\n}\r\n","export enum GamePhaseEnum {\r\n  GameMaster,\r\n  CommandPhase,\r\n  WaitingForOtherPlayers\r\n}\r\n","import {ActiveViewEnum} from '../models/ActiveView';\r\nimport {Action} from '../models/Action';\r\nimport {GamePhaseEnum} from \"../models/GamePhase\";\r\n\r\nconst DEBELLATIO_SET_VIEW = '[DEBELLATION] VIEW_SET';\r\n\r\n// actions factories\r\nexport const debellatioSetView = (payload: ActiveViewEnum) => {\r\n    return {\r\n        type: DEBELLATIO_SET_VIEW,\r\n        payload\r\n    }\r\n};\r\n\r\nconst storeInit = {\r\n    activeView:ActiveViewEnum.Join,\r\n    gamePhase:GamePhaseEnum.GameMaster\r\n};\r\n\r\nconst viewsReducer = (state:{} = storeInit, action: Action) => {\r\n    switch (action.type) {\r\n        case DEBELLATIO_SET_VIEW:\r\n            return {\r\n                ...state,\r\n                activeView:action.payload\r\n            };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default viewsReducer;","import {Action} from '../models/Action';\r\n\r\nconst DEBELLATIO_SET_GAME_CODE = '[DEBELLATION] GAME_CODE_SET';\r\nconst DEBELLATIO_SET_PlAYERS = '[DEBELLATION] PLAYERS_SET';\r\n\r\n// actions factories\r\nexport const debellatioSetGameCode = (payload: string) => {\r\n    return {\r\n        type: DEBELLATIO_SET_GAME_CODE,\r\n        payload\r\n    }\r\n};\r\nexport const debellatioSetPlayers = (payload: Array<Object>) => {\r\n    return {\r\n        type: DEBELLATIO_SET_PlAYERS,\r\n        payload\r\n    }\r\n};\r\n\r\nconst storeInit = {\r\n    gameCode: \"\",\r\n    players: []\r\n};\r\n\r\nconst miscReducer = (state:{} = storeInit, action: Action) => {\r\n    switch (action.type) {\r\n        case DEBELLATIO_SET_GAME_CODE:\r\n            return {\r\n                ...state,\r\n                gameCode:[...action.payload]\r\n            };\r\n        case DEBELLATIO_SET_PlAYERS:\r\n            return{\r\n                ...state,\r\n                players:[...action.payload]\r\n            };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default miscReducer;","import {Action} from '../models/Action';\r\n\r\nconst DEBELLATIO_UPDATE_BOARD = '[DEBELLATIO] GAME_BOARD_UPDATE';\r\nconst DEBELLATIO_UPDATE_PLAYER_ID = '[DEBELLATIO] PLAYER_ID_UPDATE';\r\nconst DEBELLATIO_RESET_TIME = '[DEBELLATIO] RESET_TIME';\r\nconst DEBELLATIO_SET_SPROUT_TIMER = '[DEBELLATIO] SET_SPROUT_TIME';\r\nconst DEBELLATIO_TIME_TIK = '[DEBELLATIO] TIME_TIK';\r\n\r\n// actions factories\r\nexport const debellatioUpdateBoard = (payload: Object) => {\r\n    return {\r\n        type: DEBELLATIO_UPDATE_BOARD,\r\n        payload\r\n    }\r\n};\r\nexport const debellatioUpdatePlayerID = (payload: Object) => {\r\n    return {\r\n        type: DEBELLATIO_UPDATE_PLAYER_ID,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const debellatioResetTime = () => {\r\n    return {\r\n        type: DEBELLATIO_RESET_TIME\r\n    }\r\n};\r\n\r\nexport const debellatioSetSproutTimer = () => {\r\n    return {\r\n        type: DEBELLATIO_SET_SPROUT_TIMER\r\n    }\r\n};\r\n\r\nexport const debellatioTimeTik = () => {\r\n    return {\r\n        type: DEBELLATIO_TIME_TIK,\r\n    }\r\n};\r\n\r\nconst storeInit = {\r\n    countryID: -1,\r\n    season:0,\r\n    armies: [],\r\n    territories: [],\r\n    settings:{},\r\n    stage:'waiting',\r\n    timeLeft:0,\r\n    winner:0\r\n};\r\n\r\nconst gameBoredReducer = (state:any = storeInit, action: Action) => {\r\n    switch (action.type) {\r\n        case DEBELLATIO_UPDATE_PLAYER_ID:\r\n            return{\r\n              ...state,\r\n              countryID:action.payload\r\n            };\r\n        case DEBELLATIO_UPDATE_BOARD:\r\n            return{\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case DEBELLATIO_RESET_TIME:\r\n            return{\r\n                ...state,\r\n                timeLeft : state.settings.seasonLength*60-5\r\n            };\r\n        case DEBELLATIO_SET_SPROUT_TIMER:\r\n            return{\r\n                ...state,\r\n                timeLeft : 115\r\n            };\r\n        case DEBELLATIO_TIME_TIK:\r\n            return{\r\n                ...state,\r\n                timeLeft:state.timeLeft -1\r\n            };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default gameBoredReducer;","import  SocketListner  from \"../models/SocketListner\";\r\nimport {debellatioSetView} from \"./views.reducer\";\r\nimport {ActiveViewEnum} from \"../models/ActiveView\";\r\nimport {debellatioSetGameCode, debellatioSetPlayers} from \"./misc.reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {\r\n    debellatioResetTime,\r\n    debellatioTimeTik,\r\n    debellatioUpdateBoard,\r\n    debellatioUpdatePlayerID,\r\n    debellatioSetSproutTimer\r\n} from \"./gameBoard.reducer\";\r\n\r\n\r\nconst socketListners:(dispatch: Dispatch)=>Array<SocketListner> =(dispatch:Dispatch)=>{\r\n    return(\r\n        [\r\n            {\r\n                event:'gameCreated',\r\n                fn:(message:string) => {\r\n                    dispatch(debellatioSetView (ActiveViewEnum.WaitingForPlayers));\r\n                    dispatch(debellatioSetGameCode(message));\r\n                }\r\n            },\r\n            {\r\n                event:'gameJoined',\r\n                fn:() => {\r\n                    dispatch(debellatioSetView (ActiveViewEnum.WaitingForPlayers));\r\n                }\r\n            },\r\n            {\r\n                event:'playerJoined',\r\n                fn:(message:[object]) => {\r\n                    dispatch(debellatioSetPlayers(message));\r\n                }\r\n            },\r\n            {\r\n                event:'playerId',\r\n                fn:(message:[object]) => {\r\n                    dispatch(debellatioUpdatePlayerID(message));\r\n                }\r\n            },\r\n            {\r\n                event:'gameStarted',\r\n                fn:(message:[object]) => {\r\n                    dispatch(debellatioUpdateBoard({...message,stage:'main'}));\r\n                    dispatch(debellatioSetView (ActiveViewEnum.PLayPage));\r\n                    setInterval(()=>dispatch(debellatioTimeTik()),1000);\r\n                }\r\n            },\r\n            {\r\n                event:'commandReceived',\r\n                fn:() => {\r\n                    dispatch(debellatioUpdateBoard({stage:'waiting'}));\r\n                }\r\n            },\r\n            {\r\n                event:'newSeason',\r\n                fn:(message:[object]) => {\r\n                    dispatch(debellatioUpdateBoard(message));\r\n                    dispatch(debellatioResetTime());\r\n                    dispatch(debellatioUpdateBoard({stage:'main'}));\r\n                }\r\n            },\r\n            {\r\n                event:'sproutPhase',\r\n                fn:(message:[object]) => {\r\n                    dispatch(debellatioUpdateBoard(message));\r\n                    dispatch(debellatioSetSproutTimer());\r\n                    dispatch(debellatioUpdateBoard({stage:'sprout'}));\r\n                }\r\n            },\r\n            {\r\n                event:'gameOver',\r\n                fn:(message:[object]) => {\r\n                    dispatch(debellatioUpdateBoard ({winner:message}));\r\n                    dispatch(debellatioSetView (ActiveViewEnum.Summary));\r\n                }\r\n            },\r\n            {\r\n                event:'rejoinGame',\r\n                fn:(message:[object]) => {\r\n                    dispatch(debellatioUpdateBoard({...message,stage:'main'}));\r\n                    dispatch(debellatioSetView (ActiveViewEnum.PLayPage));\r\n                    setInterval(()=>dispatch(debellatioTimeTik()),1000);\r\n                    dispatch(debellatioUpdateBoard({stage: 'waiting'}));\r\n                }\r\n            },\r\n        ]\r\n    );\r\n};\r\nexport default (socketListners);","import openSocket from 'socket.io-client';\r\nimport {Action} from '../models/Action';\r\nimport {Dispatch, Middleware, MiddlewareAPI} from 'redux';\r\nimport socketListners from \"./socketListners\";\r\n\r\n//define middleware action\r\nconst DEBELATIO_SEND_SOCKET = \"DEBELATIO_SEND_WEBSOCKET_MESSAGE\";\r\n\r\n// actions factories\r\nexport const sendSocketMessage = (msgType:string,msgVal:any=null) => {\r\n    return {\r\n        type: DEBELATIO_SEND_SOCKET,\r\n        payload: {msgType,msgVal}\r\n    }\r\n};\r\n\r\nconst socketMiddleware:Middleware = ({dispatch}: MiddlewareAPI)=>{\r\n    const socketURL = (process.env.NODE_ENV === 'development'?'http://localhost:4000' : process.env.PUBLIC_URL);\r\n    const  socket = openSocket(socketURL);\r\n\r\n    //persist socket to localstorage\r\n    socket.on('gameStarted', (msg:any) => {\r\n        localStorage.setItem('socketId', socket.id);\r\n        localStorage.setItem('gameId', msg.settings.roomId);\r\n    });\r\n    socket.on('rejoinGame', (msg:any) => {\r\n        localStorage.setItem('socketId', socket.id);\r\n    });\r\n\r\n    //register socket listeners\r\n    socketListners(dispatch).forEach(socketListner=>{\r\n        socket.on(socketListner.event, socketListner.fn);\r\n    });\r\n\r\n    //handle sending socket messages to server\r\n    return(next: Dispatch) => (action:Action) => {\r\n        if (action.type === DEBELATIO_SEND_SOCKET){\r\n                socket.emit(action.payload.msgType,action.payload.msgVal);\r\n        }\r\n        return next(action);\r\n    }\r\n};\r\n\r\nexport default ([socketMiddleware]);\r\n\r\n","import React, {useState} from 'react';\r\nimport {Dispatch} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport { debellatioSetView } from '../store/views.reducer';\r\nimport {ActiveViewEnum} from '../models/ActiveView';\r\nimport {sendSocketMessage} from \"../store/socketMiddleware\";\r\nimport './css/JoinPage.css';\r\n\r\ninterface IProps {\r\n    goToCreateGame:() => void\r\n    joinGame:(payload:object)=>void\r\n}\r\n\r\nconst JoinPage: React.FC<IProps> = ({goToCreateGame,joinGame}) => {\r\n    const [name, setname] = useState('');\r\n    const handleNameChange = (e:React.ChangeEvent<HTMLInputElement>) => setname(e.target.value);\r\n    const [gamePin, setGamePin] = useState('');\r\n    const handleGamePinChange = (e:React.ChangeEvent<HTMLInputElement>) => setGamePin(e.target.value);\r\n\r\n    const joinNewGame = () =>{\r\n        joinGame({name, id:gamePin});\r\n    };\r\n\r\n    return (\r\n        <main id=\"joinView\">\r\n            <h1>Debellatio</h1>\r\n            <form>\r\n                <input className=\"JoinPage_login-input\"  placeholder=\"Name\" value={name} onChange={handleNameChange}/>\r\n                <input className=\"JoinPage_login-input\"  placeholder=\"Game PIN\" value={gamePin} onChange={handleGamePinChange}/>\r\n\r\n            </form>\r\n            <button className=\"JoinPage_startButton\" onClick={joinNewGame}>Join Now</button>\r\n            <button className=\"JoinPage_startButton\" onClick={goToCreateGame}>Create New game</button>\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    goToCreateGame: () => {\r\n        dispatch(debellatioSetView (ActiveViewEnum.CreateGame));\r\n    },\r\n    joinGame: (payload:object) =>{\r\n        dispatch(sendSocketMessage('joinGame',payload));\r\n    }\r\n});\r\n\r\nexport default connect(null,mapDispatchToProps)(JoinPage);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {debellatioSetView} from \"../store/views.reducer\";\r\nimport {ActiveViewEnum} from \"../models/ActiveView\";\r\nimport { sendSocketMessage } from '../store/socketMiddleware';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport './css/CreateGamePage.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\ninterface IProps {\r\n    goToJoinGame:()=>void\r\n    createGame:(payload:object)=>void\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    buttonRoot: {\r\n        color: '#3a3d2a',\r\n        width: 70,\r\n        height: 35,\r\n        padding: 0,\r\n    },\r\n    sliderRoot: {\r\n        color: '#3a3d2a',\r\n        height: 8,\r\n    },\r\n    switchBase: {\r\n        padding: 0,\r\n        '&$checked': {\r\n            color: 'white',\r\n            colorSecondary:'white'\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: '#263000',\r\n            opacity: 0.8,\r\n        },\r\n    },\r\n    checked:{\r\n        left: 17,\r\n    },\r\n    track: {},\r\n    thumb: {\r\n        width: 35,\r\n        height: 35,\r\n    },\r\n    sliderThumb:{\r\n        marginTop: -11,\r\n        marginLeft: -11,\r\n        width: 35,\r\n        height: 35,\r\n        border: '1px solid black',\r\n    },\r\n    valueLabel: {\r\n        left: 0,\r\n    },\r\n    rail:{\r\n        color: '#668000',\r\n        opacity: 1,\r\n        height: 13,\r\n        borderRadius: 4,\r\n    },\r\n    mark: {\r\n        marginTop: 4,\r\n        height: 5,\r\n    },\r\n});\r\n\r\nconst CreateGamePage: React.FC<IProps> = ({goToJoinGame,createGame}) => {\r\n    const [state, setState] = React.useState({\r\n        name: '',\r\n        longYear: false,\r\n        maxPlayers: 7,\r\n        seasonLength:6,\r\n        firstSeason:12,\r\n        gmMode:false\r\n    });\r\n    const classes = useStyles();\r\n\r\n    const handleInputChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setState({ ...state, [name]: event.target.value });\r\n    };\r\n    const handleSwitchChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n    };\r\n    const handleSliderChange = (name: string) => (event: any,newValue: number | number[]) => {\r\n        setState({ ...state, [name]: newValue });\r\n    };\r\n\r\n    const createNewGame = ()=>{\r\n        createGame({\r\n            name:state.name,\r\n            longYear:state.longYear,\r\n            seasonLength:state.seasonLength,\r\n            firstSeason:state.firstSeason,\r\n            maxPlayers:state.maxPlayers,\r\n            GM:state.gmMode\r\n        });\r\n    };\r\n    return (\r\n        <main id=\"newGameView\">\r\n            <h1>Debellatio</h1>\r\n            <input\r\n                className=\"CrateGamePage_input\"\r\n                placeholder=\"Name\"\r\n                value={state.name}\r\n                onChange={handleInputChange('name')}\r\n            />\r\n            <div className={'CreateGame_settingForm'}>\r\n                <div className={'CreateGame_sliders'}>\r\n                    <h3>Maximum Number Of players</h3>\r\n                    <Slider\r\n                        min={2}\r\n                        max={7}\r\n                        step={1}\r\n                        marks\r\n                        valueLabelDisplay=\"auto\"\r\n                        value={state.maxPlayers}\r\n                        onChange={handleSliderChange('maxPlayers')}\r\n                        classes={{\r\n                            root:classes.sliderRoot,\r\n                            rail: classes.rail,\r\n                            thumb: classes.sliderThumb,\r\n                            mark: classes.mark,\r\n                            valueLabel:classes.valueLabel\r\n                        }}\r\n                    />\r\n                    <h3>Season Length (Minutes)</h3>\r\n                    <Slider\r\n                        min={1}\r\n                        max={30}\r\n                        step={1}\r\n                        marks\r\n                        valueLabelDisplay=\"auto\"\r\n                        value={state.seasonLength}\r\n                        onChange={handleSliderChange('seasonLength')}\r\n                        classes={{\r\n                            root:classes.sliderRoot,\r\n                            rail: classes.rail,\r\n                            thumb: classes.sliderThumb,\r\n                            mark: classes.mark,\r\n                            valueLabel:classes.valueLabel\r\n                        }}\r\n                    />\r\n                    <h3>First Season Length (Minutes)</h3>\r\n                    <Slider\r\n                        min={1}\r\n                        max={30}\r\n                        step={1}\r\n                        marks\r\n                        valueLabelDisplay=\"auto\"\r\n                        value={state.firstSeason}\r\n                        onChange={handleSliderChange('firstSeason')}\r\n                        classes={{\r\n                            root:classes.sliderRoot,\r\n                            rail: classes.rail,\r\n                            thumb: classes.sliderThumb,\r\n                            mark: classes.mark,\r\n                            valueLabel:classes.valueLabel\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={'CreateGame_spectatorButton'}>\r\n                    <h3>Spectator Mode</h3>\r\n                    <Switch\r\n                        checked={state.gmMode}\r\n                        onChange={handleSwitchChange('gmMode')}\r\n                        classes={{\r\n                            root: classes.buttonRoot,\r\n                            switchBase: classes.switchBase,\r\n                            thumb: classes.thumb,\r\n                            checked: classes.checked,\r\n                            track: classes.track\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={'CreateGame_seasonsButton'}>\r\n                    <h3 className={'CreateGame_seasonsTitle'}>Seasons Per Year</h3>\r\n                        <h3>2</h3>\r\n                        <Switch\r\n                            checked={state.longYear}\r\n                            onChange={handleSwitchChange('longYear')}\r\n                            disableRipple\r\n                            classes={{\r\n                                root: classes.buttonRoot,\r\n                                switchBase: classes.switchBase,\r\n                                thumb: classes.thumb,\r\n                                checked: classes.checked,\r\n                                track: classes.track\r\n                            }}\r\n\r\n                        />\r\n                        <h3>4</h3>\r\n                </div>\r\n            </div>\r\n            <button className=\"CrateGamePage_button\"  onClick={createNewGame}>Create New Game</button>\r\n            <button className=\"CrateGamePage_button\" onClick={goToJoinGame}>Join a Game</button>\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    goToJoinGame: () => {\r\n        dispatch(debellatioSetView (ActiveViewEnum.Join));\r\n    },\r\n    createGame:(payload:object)=>{\r\n        dispatch(sendSocketMessage('newGame',payload));\r\n    }\r\n});\r\n\r\nexport default connect(null,mapDispatchToProps)(CreateGamePage);","export enum TerritoryTypeEnum {\r\n    Land,\r\n    Coast,\r\n    Sea\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Dispatch} from \"redux\";\r\nimport {sendSocketMessage} from \"../store/socketMiddleware\";\r\nimport './css/WaitingForPlayersPage.css';\r\n\r\ninterface IProps {\r\n    joinCode:string\r\n    players:any\r\n    startGame:(gameId:string)=>void\r\n}\r\n\r\nconst WaitingForPlayersPage: React.FC<IProps> = ({joinCode,players,startGame}) => {\r\n    return (\r\n        <main id=\"waitingView\">\r\n            <h1>Waiting for Players</h1>\r\n            <h1 id=\"pinCodeDisplay\">{joinCode}</h1>\r\n            {joinCode !== \"\" && <button className=\"Waiting_startButton\"  onClick={()=>{startGame(joinCode)}}>Start Game</button>}\r\n            <div className={'Waiting_playersBox'}>\r\n            {\r\n                players.map((player:any)=>(\r\n                    <h2 key={player.id} className={'Waiting_player'}>{player.name}</h2>\r\n                ))\r\n            }\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state:any) => {\r\n    return {\r\n        joinCode: state.misc.gameCode,\r\n        players: state.misc.players\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    startGame:(gameId:string)=>{\r\n        dispatch(sendSocketMessage('startGame',{gameId}));\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WaitingForPlayersPage);","export const sampleGameObject = {\r\n    armies: [{name: \"Kurt Cobain\", balance:-2}, {name: \"Amy Winehouse\", balance:2}, {name: \"Jimi Hendrix\", balance:2}],\r\n    settings: {seasonsPerYear: 2, seasonLength: 6, firstSeason: 12},\r\n    territories: [\r\n        {\r\n            \"id\": 0,\r\n            \"name\": \"0\",\r\n            \"capital\": \"City\",\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                1,\r\n                6\r\n            ],\r\n            \"troop\": 0,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"1\",\r\n            \"capital\": null,\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                0,\r\n                7,\r\n                2\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"2\",\r\n            \"capital\": \"City\",\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                1,\r\n                8,\r\n                3\r\n            ],\r\n            \"troop\": 0,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"name\": \"3\",\r\n            \"capital\": null,\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                2,\r\n                9,\r\n                4\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"name\": \"4\",\r\n            \"capital\": \"City\",\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                3,\r\n                10\r\n            ],\r\n            \"troop\": 0,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"name\": \"5\",\r\n            \"capital\": \"City\",\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                6,\r\n                13\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 6,\r\n            \"name\": \"6\",\r\n            \"capital\": null,\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                0,\r\n                5,\r\n                14,\r\n                7\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 7,\r\n            \"name\": \"7\",\r\n            \"capital\": \"City\",\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                1,\r\n                6,\r\n                15,\r\n                8\r\n            ],\r\n            \"troop\": 0,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 8,\r\n            \"name\": \"8\",\r\n            \"capital\": null,\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                2,\r\n                7,\r\n                16,\r\n                9\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 9,\r\n            \"name\": \"9\",\r\n            \"capital\": null,\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                3,\r\n                8,\r\n                17,\r\n                10\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 10,\r\n            \"name\": \"10\",\r\n            \"capital\": null,\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                4,\r\n                9,\r\n                18,\r\n                11\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 11,\r\n            \"name\": \"11\",\r\n            \"capital\": \"City\",\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                10,\r\n                18,\r\n                19\r\n            ],\r\n            \"troop\": 1,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 12,\r\n            \"name\": \"12\",\r\n            \"capital\": \"Port\",\r\n            \"country\": \"B\",\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                21,\r\n                22,\r\n                13\r\n            ],\r\n            \"troop\": 1,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 13,\r\n            \"name\": \"13\",\r\n            \"capital\": null,\r\n            \"country\": \"B\",\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                5,\r\n                12,\r\n                22,\r\n                14\r\n            ],\r\n            \"troop\": 0,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 14,\r\n            \"name\": \"14\",\r\n            \"capital\": \"Port\",\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                6,\r\n                13,\r\n                22,\r\n                23,\r\n                15\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 15,\r\n            \"name\": \"15\",\r\n            \"capital\": null,\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                7,\r\n                14,\r\n                24,\r\n                16\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 16,\r\n            \"name\": \"16\",\r\n            \"capital\": \"City\",\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                8,\r\n                15,\r\n                25,\r\n                17\r\n            ],\r\n            \"troop\": 0,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 17,\r\n            \"name\": \"17\",\r\n            \"capital\": null,\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                9,\r\n                16,\r\n                26,\r\n                18\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 18,\r\n            \"name\": \"18\",\r\n            \"capital\": null,\r\n            \"type\": 2,\r\n            \"borders\": [\r\n                11,\r\n                10,\r\n                9,\r\n                17,\r\n                26,\r\n                27,\r\n                28,\r\n                19\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": -1\r\n        },\r\n        {\r\n            \"id\": 19,\r\n            \"name\": \"19\",\r\n            \"capital\": null,\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                11,\r\n                18,\r\n                28,\r\n                20\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 20,\r\n            \"name\": \"20\",\r\n            \"capital\": \"City\",\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                19,\r\n                22\r\n            ],\r\n            \"troop\": 0,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 21,\r\n            \"name\": \"21\",\r\n            \"capital\": null,\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                12,\r\n                30,\r\n                22\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 22,\r\n            \"name\": \"22\",\r\n            \"capital\": null,\r\n            \"type\": 2,\r\n            \"borders\": [\r\n                14,\r\n                13,\r\n                12,\r\n                21,\r\n                30,\r\n                31,\r\n                32,\r\n                23\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": -1\r\n        },\r\n        {\r\n            \"id\": 23,\r\n            \"name\": \"23\",\r\n            \"capital\": null,\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                14,\r\n                22,\r\n                32,\r\n                24\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 24,\r\n            \"name\": \"24\",\r\n            \"capital\": \"City\",\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                15,\r\n                23,\r\n                32,\r\n                33,\r\n                25\r\n            ],\r\n            \"troop\": 1,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 25,\r\n            \"name\": \"25\",\r\n            \"capital\": \"City\",\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                16,\r\n                24,\r\n                34,\r\n                26\r\n            ],\r\n            \"troop\": 0,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 26,\r\n            \"name\": \"26\",\r\n            \"capital\": null,\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                17,\r\n                25,\r\n                35,\r\n                27\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 27,\r\n            \"name\": \"27\",\r\n            \"capital\": \"City\",\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                18,\r\n                26,\r\n                36,\r\n                28\r\n            ],\r\n            \"troop\": 1,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 28,\r\n            \"name\": \"28\",\r\n            \"capital\": \"City\",\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                19,\r\n                27,\r\n                37,\r\n                29\r\n            ],\r\n            \"troop\": 1,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 29,\r\n            \"name\": \"29\",\r\n            \"capital\": null,\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                20,\r\n                28,\r\n                38\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 30,\r\n            \"name\": \"30\",\r\n            \"capital\": \"Port\",\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                22,\r\n                21,\r\n                31\r\n            ],\r\n            \"troop\": 1,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 31,\r\n            \"name\": \"31\",\r\n            \"capital\": null,\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                22,\r\n                30,\r\n                39,\r\n                32\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 32,\r\n            \"name\": \"32\",\r\n            \"capital\": null,\r\n            \"type\": 2,\r\n            \"borders\": [\r\n                24,\r\n                23,\r\n                22,\r\n                31,\r\n                39,\r\n                40,\r\n                41,\r\n                33\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": -1\r\n        },\r\n        {\r\n            \"id\": 33,\r\n            \"name\": \"33\",\r\n            \"capital\": null,\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                24,\r\n                32,\r\n                41,\r\n                34\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 34,\r\n            \"name\": \"34\",\r\n            \"capital\": null,\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                25,\r\n                33,\r\n                41,\r\n                42,\r\n                35\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 35,\r\n            \"name\": \"35\",\r\n            \"capital\": \"City\",\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                26,\r\n                34,\r\n                43,\r\n                36\r\n            ],\r\n            \"troop\": 0,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 36,\r\n            \"name\": \"36\",\r\n            \"capital\": null,\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                27,\r\n                35,\r\n                44,\r\n                37\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 37,\r\n            \"name\": \"37\",\r\n            \"capital\": null,\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                28,\r\n                36,\r\n                45,\r\n                38\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 38,\r\n            \"name\": \"38\",\r\n            \"capital\": \"City\",\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                29,\r\n                37\r\n            ],\r\n            \"troop\": 0,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 39,\r\n            \"name\": \"39\",\r\n            \"capital\": \"Port\",\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                32,\r\n                32,\r\n                40\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 40,\r\n            \"name\": \"40\",\r\n            \"capital\": null,\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                32,\r\n                39,\r\n                46,\r\n                41\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 41,\r\n            \"name\": \"41\",\r\n            \"capital\": null,\r\n            \"type\": 2,\r\n            \"borders\": [\r\n                34,\r\n                33,\r\n                32,\r\n                40,\r\n                46,\r\n                47,\r\n                48,\r\n                42\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": -1\r\n        },\r\n        {\r\n            \"id\": 42,\r\n            \"name\": \"42\",\r\n            \"capital\": \"City\",\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                34,\r\n                41,\r\n                48,\r\n                43\r\n            ],\r\n            \"troop\": 1,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 43,\r\n            \"name\": \"43\",\r\n            \"capital\": null,\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                35,\r\n                42,\r\n                49,\r\n                44\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 44,\r\n            \"name\": \"44\",\r\n            \"capital\": null,\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                36,\r\n                43,\r\n                50,\r\n                45\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 45,\r\n            \"name\": \"45\",\r\n            \"capital\": \"City\",\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                37,\r\n                44\r\n            ],\r\n            \"troop\": 0,\r\n            \"army\": 3\r\n        },\r\n        {\r\n            \"id\": 46,\r\n            \"name\": \"46\",\r\n            \"capital\": \"City\",\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                41,\r\n                40,\r\n                47\r\n            ],\r\n            \"troop\": 1,\r\n            \"army\": 1\r\n        },\r\n        {\r\n            \"id\": 47,\r\n            \"name\": \"47\",\r\n            \"capital\": null,\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                41,\r\n                46,\r\n                48\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 48,\r\n            \"name\": \"48\",\r\n            \"capital\": \"City\",\r\n            \"type\": 1,\r\n            \"borders\": [\r\n                42,\r\n                41,\r\n                47,\r\n                49\r\n            ],\r\n            \"troop\": 1,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 49,\r\n            \"name\": \"49\",\r\n            \"capital\": null,\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                43,\r\n                48,\r\n                50\r\n            ],\r\n            \"troop\": null,\r\n            \"army\": 2\r\n        },\r\n        {\r\n            \"id\": 50,\r\n            \"name\": \"50\",\r\n            \"capital\": \"City\",\r\n            \"type\": 0,\r\n            \"borders\": [\r\n                44,\r\n                49\r\n            ],\r\n            \"troop\": 0,\r\n            \"army\": 3\r\n        }\r\n    ]\r\n};","export const samplePLayersArray = [\r\n    {name:'Kurt Cobain',id:'95jve84fs'},\r\n    {name:'Amy Winehouse',id:'dfgdfgdv'},\r\n    {name:'Jim Morrison',id:'123a4t5'},\r\n    {name:'Jimi Hendrix',id:'7096hg34wrf'},\r\n    {name:'Janis Joplin',id:'bbtrdxv'},\r\n    {name:'Brian Jones',id:'btyu#VW$'},\r\n    {name:'Ron McKernan',id:'vm30x62mg'},\r\n];","import React,{ useState } from 'react';\r\nimport {debellatioSetView} from \"../../store/views.reducer\";\r\nimport {ActiveViewEnum} from \"../../models/ActiveView\";\r\nimport {connect} from \"react-redux\";\r\nimport './QaBar.css';\r\nimport {\r\n    debellatioResetTime, debellatioSetSproutTimer,\r\n    debellatioTimeTik,\r\n    debellatioUpdateBoard,\r\n    debellatioUpdatePlayerID\r\n} from \"../../store/gameBoard.reducer\";\r\nimport {sampleGameObject} from \"./sampleGameObject\";\r\nimport {debellatioSetGameCode, debellatioSetPlayers} from \"../../store/misc.reducer\";\r\nimport {samplePLayersArray} from \"./samplePLayersArray\";\r\n\r\nconst QaBar = ({goToCreateGame,goToWaiting,goToPlayPage,goToSpectator,goToWinner,goToSprout}) => {\r\n    const [closed, setClosed] = useState(false);\r\n    if(closed) return(<div/>);\r\n    return (\r\n    <div id={\"QaBar\"}>\r\n        <button onClick={()=>setClosed(true)}>X</button>\r\n        <button onClick={goToCreateGame}>Go to Create Game</button>\r\n        <button onClick={goToPlayPage}>Go to play page</button>\r\n        <button onClick={goToSpectator}>Spectator Mode</button>\r\n        <button onClick={goToWinner}>Winner Page </button>\r\n        <button onClick={goToWaiting}>Waiting Page </button>\r\n        <button onClick={goToSprout}>Sprout Page </button>\r\n    </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    goToCreateGame: () => {\r\n        dispatch(debellatioSetView (ActiveViewEnum.CreateGame));\r\n    },\r\n    goToPlayPage: () => {\r\n        dispatch(debellatioSetView (ActiveViewEnum.PLayPage));\r\n        dispatch(debellatioUpdatePlayerID(1));\r\n        dispatch(debellatioUpdateBoard(sampleGameObject));\r\n        dispatch(debellatioUpdateBoard({stage:'main'}));\r\n        setInterval(()=>dispatch(debellatioTimeTik()),1000);\r\n        dispatch(debellatioResetTime());\r\n    },\r\n    goToWaiting: () => {\r\n        dispatch(debellatioSetPlayers(samplePLayersArray));\r\n        dispatch(debellatioSetView (ActiveViewEnum.WaitingForPlayers));\r\n        dispatch(debellatioSetGameCode('ABCD'));\r\n    },\r\n    goToSpectator: () => {\r\n        dispatch(debellatioSetView (ActiveViewEnum.PLayPage));\r\n        dispatch(debellatioUpdatePlayerID(-1));\r\n        dispatch(debellatioUpdateBoard(sampleGameObject));\r\n        dispatch(debellatioUpdateBoard({stage:'main'}));\r\n        setInterval(()=>dispatch(debellatioTimeTik()),1000);\r\n        dispatch(debellatioResetTime());\r\n    },\r\n    goToWinner: () => {\r\n        dispatch(debellatioUpdatePlayerID(1));\r\n        dispatch(debellatioUpdateBoard(sampleGameObject));\r\n        dispatch(debellatioUpdateBoard({stage:'main'}));\r\n        dispatch(debellatioUpdateBoard ({winner:2}));\r\n        dispatch(debellatioSetView (ActiveViewEnum.Summary));\r\n    },\r\n    goToSprout: () =>{\r\n        dispatch(debellatioSetView (ActiveViewEnum.PLayPage));\r\n        dispatch(debellatioUpdatePlayerID(1));\r\n        dispatch(debellatioUpdateBoard(sampleGameObject));\r\n        dispatch(debellatioSetSproutTimer());\r\n        dispatch(debellatioUpdateBoard({stage:'sprout'}));\r\n    }\r\n});\r\n\r\nexport default connect(null,mapDispatchToProps)(QaBar);","export enum TroopTypesEnum {\r\n    tank,\r\n    ship\r\n}","import React from 'react';\r\nimport {TerritoryTypeEnum} from \"../../../models/territoryTypes\";\r\nimport './SingleTerritory.css';\r\n\r\ninterface IProps {\r\n    name:string|number\r\n    id:number\r\n    army:number\r\n    capital:string|null\r\n    troop:number|null\r\n    type:TerritoryTypeEnum\r\n}\r\n\r\nconst SingleTerritory: React.FC<IProps> = ({name, id,army,capital,troop,type}) => {\r\n    const gridRow=(id<26?'a'+(id+10).toString(36):'b'+(id-16).toString(36));//mark to location in the grid to display the block\r\n    //convert arrays to values\r\n    const troopType = [\r\n        'tank',\r\n        'ship'\r\n    ];\r\n    const armyClasses= [\r\n        'armyNon',\r\n        'armyA',\r\n        'armyB',\r\n        'armyC',\r\n        'armyD',\r\n        'armyE',\r\n        'armyF',\r\n        'armyG'\r\n    ];\r\n    const armyId = (type === TerritoryTypeEnum.Sea ? 'armySea':armyClasses[army]);\r\n    const capitals = {'City':'SingleTerritory_capital-city','Port':'SingleTerritory_capital-port'};\r\n    // @ts-ignore\r\n    const classes = 'singleTerritoryBox '+ armyId + (capital ? ' ' + capitals[capital] : '');\r\n    const troopImg = (troop!==null?troopType[troop]:null);\r\n    return (\r\n        <div className={classes} style={{gridArea: gridRow}}>\r\n            <div className={'singleTerritoryBox_name'}>{name}</div>\r\n            <div className={'singleTerritoryBox_troop'}>{troopImg&&<img src={`img/${troopImg}.png`} alt={\"\"}/>}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SingleTerritory;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './GameMap.css';\r\nimport SingleTerritory from \"./subComponents/SingleTerritory\";\r\ninterface IProps {\r\n    territories:[any]\r\n}\r\n\r\nconst GameMap: React.FC<IProps> = ({territories}) => {\r\n    return (\r\n        <div className={'GameMap'}>\r\n            {territories.map((territory)=>(<SingleTerritory\r\n                key={territory.id}\r\n                name={territory.name}\r\n                id={territory.id}\r\n                army={territory.army}\r\n                capital={territory.capital}\r\n                troop={territory.troop}\r\n                type={territory.type}\r\n            />))}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        territories: state.board.territories\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(GameMap);","import React, { useState } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {TroopTypesEnum} from \"../../models/troopTypes\";\r\nimport {TerritoryTypeEnum} from \"../../models/territoryTypes\";\r\nimport './CommandSheetRow.css';\r\n\r\ninterface IProps {\r\n    troopId:number\r\n    commandList:any\r\n    territories:any\r\n}\r\n\r\nconst CommandSheetRow: React.FC<IProps> = ({troopId, commandList,territories}) => {\r\n    const [order, setOrder] = useState(\"defend\");\r\n    const [target, setTarget] = useState(troopId.toString());\r\n    const [auxUnit, setAuxUnit] = useState(\"\");\r\n\r\n    commandList[troopId]={order,target,auxUnit};\r\n    return (\r\n        <div className={'CommandSheetRow'}>\r\n            <img\r\n                className={'CommandSheetRow_image'}\r\n                src={`${process.env.PUBLIC_URL}/img/${territories[troopId].troop === TroopTypesEnum.tank?'tank':'ship'}.png`}\r\n                alt=\"Tank\"\r\n            />\r\n            <div className={'CommandSheetRow_troopName'}>\r\n                {troopId}\r\n            </div>\r\n            <select value={order} onChange={e => setOrder(e.target.value)}>\r\n                <option value={\"defend\"}>Defend</option>\r\n                <option  value={\"attack\"}>Attack</option>\r\n                <option  value={\"assist\"}>Assist</option>\r\n                {territories[troopId].troop===TroopTypesEnum.ship && territories[troopId].type === TerritoryTypeEnum.Sea && <option  value={\"convoy\"}>Convoy</option>}\r\n                {territories[troopId].troop!==TroopTypesEnum.ship && territories[troopId].type === TerritoryTypeEnum.Coast && <option  value={\"getConvoyed\"}>Get Convoyed</option>}\r\n            </select>\r\n            <select value={target} onChange={e => setTarget(e.target.value)}>\r\n                <option value={troopId}>{territories[troopId].name}</option>\r\n                {\r\n                    territories[troopId].borders.map((border: any) => (\r\n                        ((territories[troopId].troop === TroopTypesEnum.tank && ((territories[border].type !== TerritoryTypeEnum.Sea) !== (order === \"getConvoyed\")))||(territories[troopId].troop === TroopTypesEnum.ship && territories[border].type !== TerritoryTypeEnum.Land)) &&\r\n                    <option key={`${troopId}_${border}_${Math.random()}`} value={border}>{border}</option>\r\n                    ))\r\n                }\r\n            </select>\r\n\r\n            {(order ===\"assist\" || order === \"convoy\")&&<select value={auxUnit} onChange={e => setAuxUnit(e.target.value)}>\r\n                <option value=\"\"/>\r\n                {\r\n                    (order ===\"assist\" ? territories[parseInt(target)] : territories[troopId]).borders.map((neighbor: any) => (\r\n                        <option key={`${territories[troopId]}${neighbor}`} value={neighbor}>{neighbor}</option>\r\n                    ))\r\n                }\r\n            </select>}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        territories: state.board.territories,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(CommandSheetRow);","import React, { useState } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport {TerritoryTypeEnum} from \"../../models/territoryTypes\";\r\nimport './SproutTroopRow.css';\r\n\r\ninterface IProps {\r\n    troopId:number\r\n    commandList:any\r\n    territories:any\r\n    allowedActions:number\r\n    sprout?:boolean\r\n}\r\n\r\nconst SproutTroopRow: React.FC<IProps> = ({troopId, commandList,territories,allowedActions,sprout=false}) => {\r\n    const actionParam = (sprout?'sprout':'destroy');\r\n    const [order, setOrder] = useState(false);\r\n\r\n    const handleOrderChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if(event.target.checked && commandList.commandCount<allowedActions){\r\n            setOrder(true);\r\n            commandList.commandCount++;\r\n            commandList.commands[troopId]=actionParam;\r\n        }else if(!event.target.checked){\r\n            setOrder(false);\r\n            commandList.commandCount--;\r\n            delete commandList.commands[troopId];\r\n        }\r\n\r\n    };\r\n    return (\r\n        <div className={'SproutTroopRow'}>\r\n            <img\r\n                className={'SproutTroopRow_image'}\r\n                src={`${process.env.PUBLIC_URL}/img/${territories[troopId].type === TerritoryTypeEnum.Land?'tank':'ship'}.png`}\r\n                alt=\"Tank\"\r\n            />\r\n            {territories[troopId].name}\r\n            <div className={'SproutTroopRow_Switch'}>\r\n                <Switch\r\n                    checked={order}\r\n                    onChange={handleOrderChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        territories: state.board.territories,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SproutTroopRow);","import React from 'react';\r\nimport CommandSheetRow from \"./CommandSheetRow\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {sendSocketMessage} from \"../../store/socketMiddleware\";\r\nimport {debellatioUpdateBoard} from \"../../store/gameBoard.reducer\";\r\nimport SproutTroopRow from \"./SproutTroopRow\";\r\nimport './CommandSheet.css';\r\n\r\ninterface IProps {\r\n    stage: string\r\n    territories: any\r\n    army: String\r\n    submitCommands: (payload: any) => void\r\n    submitSprout: (payload: any) => void\r\n    waitForPlayers: () => void\r\n    season: number\r\n    armyBalance: number\r\n}\r\n\r\nconst CommandSheet: React.FC<IProps> = ({territories, army, stage, submitCommands, submitSprout, waitForPlayers, season, armyBalance}) => {\r\n    const commandList: any = {commands: {}, season,commandCount:0};\r\n\r\n    const dispatchOrders = () => {\r\n        submitCommands(commandList);\r\n    };\r\n    const dispatchSprout = () => {\r\n        submitSprout(commandList);\r\n    };\r\n\r\n    const view = getCommandSheetView();\r\n\r\n    function getCommandSheetView(): JSX.Element | undefined {\r\n        switch (stage) {\r\n            case 'waiting':\r\n                return (\r\n                    <div className={\"CommandSheet\"}>\r\n                        <h3>Waiting for other players</h3>\r\n                    </div>\r\n                );\r\n            case 'main':\r\n                return (\r\n                    <div className={\"CommandSheet\"}>\r\n                        <div className={\"CommandSheet_commandList\"}>\r\n                            {\r\n                                territories.map((territory: any, territoryId: number) => (\r\n                                    (territory.army === army && territory.troop !== null) &&\r\n                                    <CommandSheetRow key={territoryId} troopId={territoryId}\r\n                                                               commandList={commandList.commands}/>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <button  className={'CommandSheet_submit'} onClick={dispatchOrders}>\r\n                            Send Orders\r\n                        </button>\r\n                    </div>\r\n                );\r\n            case 'sprout':\r\n                if (armyBalance === 0) waitForPlayers();\r\n                const buildNew = armyBalance>0 ;\r\n                const allowedActions = Math.abs(armyBalance);\r\n                return (\r\n                    <div className={\"CommandSheet\"}>\r\n                        <h2>{(buildNew?`Build New ${allowedActions} Troop${(allowedActions>1?'s':'')}`:`Disband ${allowedActions} Unit${(allowedActions>1?'s':'')}`)}</h2>\r\n                        <div className={\"CommandSheet_sproutList\"}>\r\n                            {buildNew ?(\r\n                                territories.map((territory:any,territoryId:number)=>(\r\n                                    (territory.army === army && territory.troop===null && territory.capital !== null) && <SproutTroopRow key={territoryId} troopId={territoryId} commandList ={commandList} allowedActions={allowedActions} sprout={true}/>\r\n                                ))\r\n                            ):(\r\n                                territories.map((territory:any,territoryId:number)=>(\r\n                                    (territory.army === army && territory.troop!==null) && <SproutTroopRow key={territoryId} troopId={territoryId} commandList ={commandList} allowedActions={allowedActions}/>\r\n                                ))\r\n                            )}\r\n                        </div>\r\n                        <button className={'CommandSheet_submit'} onClick={dispatchSprout}>\r\n                            Send Orders\r\n                        </button>\r\n                    </div>\r\n                );\r\n        }\r\n        return;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {view}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        stage: state.board.stage,\r\n        territories: state.board.territories,\r\n        army: state.board.countryID,\r\n        season: state.board.season,\r\n        armyBalance: state.board.armies[state.board.countryID - 1].balance\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    submitCommands: (payload: object) => {\r\n        dispatch(sendSocketMessage('dispatchOrders', payload));\r\n    },\r\n    submitSprout: (payload: object) => {\r\n        dispatch(sendSocketMessage('sproutOrders', payload));\r\n    },\r\n    waitForPlayers: () => {\r\n        dispatch(debellatioUpdateBoard({stage: 'waiting'}));\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandSheet);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './TopBar.css';\r\nimport {timeToSec,phaseToSeason} from \"../../services/time\";\r\n\r\ninterface IProps {\r\n    playerName:string\r\n    playerId:number\r\n    timeLeft:number\r\n    season: number\r\n    seasonsPerYear : number\r\n    isGm:boolean\r\n}\r\n\r\nconst TopBar: React.FC<IProps> = ({playerName,playerId,timeLeft,season,seasonsPerYear,isGm}) => {\r\n    return (\r\n        <div className={`TopBar player${playerId}`}>\r\n            <div><div>season: &nbsp;</div><div>{phaseToSeason(season,seasonsPerYear)}</div></div>\r\n            <div>{!isGm && <div>commander: &nbsp;</div>}{!isGm &&<div>{playerName}</div>}</div>\r\n            <div><div>time Left: &nbsp;</div><div>{timeToSec(timeLeft)}</div></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        playerName: (state.board.countryID === -1?'':state.board.armies[state.board.countryID-1].name),\r\n        playerId:state.board.countryID,\r\n        timeLeft:state.board.timeLeft,\r\n        season: state.board.season,\r\n        seasonsPerYear: state.board.settings.seasonsPerYear,\r\n        isGm: state.board.countryID === -1\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopBar);","const timeToSec = (time:number)=>{\r\n    if(time<0) return '00:00';\r\n    const mins = Math.floor(time / 60);\r\n    const secs = time % 60;\r\n    return( mins.toString().padStart(2, \"0\") + ' : ' + secs.toString().padStart(2, \"0\") );\r\n};\r\n\r\nconst phaseToSeason = (phase:number,seasonsPerYear:number)=>{\r\n    const year =1900 + Math.floor(phase/seasonsPerYear);\r\n    const seasons = (seasonsPerYear === 2 ? ['Fall','Spring'] : ['Fall','Winter','Spring','Summer']);\r\n    const season = seasons[phase % seasonsPerYear];\r\n    return( `${season}  ${year}` );\r\n};\r\nexport {timeToSec,phaseToSeason};","import React from 'react';\r\nimport GameMap from \"../components/GameMap/GameMap\";\r\nimport CommandSheet from \"../components/CommandSheet/CommandSheet\";\r\nimport TopBar from \"../components/TopBar/TopBar\";\r\nimport {connect} from \"react-redux\";\r\nimport './css/PlayPage.css';\r\n\r\ninterface IProps {\r\n    isGm:boolean\r\n}\r\n\r\nconst PlayPage: React.FC<IProps> = ({isGm}) => {\r\n    return (\r\n        <main id=\"playPage\">\r\n            <TopBar/>\r\n            <GameMap/>\r\n            {!isGm && <CommandSheet/>}\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        isGm: state.board.countryID === -1\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(PlayPage);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './css/SummaryPage.css';\r\nimport {Dispatch} from \"redux\";\r\nimport {debellatioSetView} from \"../store/views.reducer\";\r\nimport {ActiveViewEnum} from \"../models/ActiveView\";\r\n\r\ninterface IProps {\r\n    winner:string\r\n    goToJoinGame:(payload:object)=>void\r\n}\r\n\r\nconst SummaryPage: React.FC<IProps> = ({winner,goToJoinGame}) => {\r\n    localStorage.removeItem('socketId');\r\n\r\n    return (\r\n        <main id=\"summaryPage\">\r\n            <h1>The Winner</h1>\r\n            <h2 className={'capitalize'}>{winner.toLowerCase()}</h2>\r\n            <button className=\"CrateGamePage_button\" onClick={goToJoinGame}>New Game</button>\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state:any) => {\r\n    return {\r\n        winner: state.board.armies[state.board.winner-1].name\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    goToJoinGame: () => {\r\n        dispatch(debellatioSetView (ActiveViewEnum.Join));\r\n    },\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SummaryPage);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './App.css';\r\nimport {ActiveViewEnum} from './models/ActiveView';\r\n\r\n//Import Pages\r\nimport JoinPage from './pages/JoinPage';\r\nimport CreateGamePage from './pages/CreateGamePage';\r\nimport WaitingForPlayersPage from './pages/WaitingForPlayersPage';\r\nimport QaBar from './components/QA/QaBar';\r\nimport PlayPage from './pages/PlayPage';\r\nimport SummaryPage from \"./pages/SummaryPage\";\r\nimport {sendSocketMessage} from \"./store/socketMiddleware\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ninterface IProp {\r\n  activeView: ActiveViewEnum\r\n  gameId:string\r\n  rejoin:(payload:object)=>void\r\n  gameOver:(payload:string)=>void\r\n}\r\n\r\nconst App: React.FC<IProp> = ({activeView,gameId,rejoin,gameOver}) => {\r\n  const view = getActiveView();\r\n  function getActiveView(): JSX.Element | undefined {\r\n    switch (activeView) {\r\n      case ActiveViewEnum.Join:\r\n        //check if in the middle of an existing game\r\n        if (localStorage.getItem('socketId')) {\r\n          rejoin({'socketId':localStorage.getItem('socketId'), 'gameId':localStorage.getItem('gameId')});\r\n        }\r\n        return <JoinPage/>;\r\n      case ActiveViewEnum.CreateGame:\r\n        return <CreateGamePage/>;\r\n      case ActiveViewEnum.WaitingForPlayers:\r\n        return <WaitingForPlayersPage/>;\r\n      case ActiveViewEnum.PLayPage:\r\n        return <PlayPage/>;\r\n      case ActiveViewEnum.Summary:\r\n        gameOver(gameId);\r\n        return <SummaryPage/>;\r\n    }\r\n    return;\r\n  }\r\n  return (\r\n      <>\r\n        {process.env.NODE_ENV === 'development' && <QaBar/>}\r\n      {view}\r\n      </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    activeView: state.views.activeView,\r\n    gameId:state.board.settings.gameId\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  rejoin: (payload:object) =>{\r\n    dispatch(sendSocketMessage('rejoin',payload));\r\n  },\r\n  gameOver: (payload:string) =>{\r\n    dispatch(sendSocketMessage('gameOver',payload));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport configureStore from './store/configureStore';\r\n\r\nconst store = configureStore();\r\nReactDOM.render(\r\n\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {combineReducers, createStore, applyMiddleware} from 'redux'\r\nimport viewsReducer from \"./views.reducer\";\r\nimport miscReducer from \"./misc.reducer\";\r\nimport gameBoredReducer from \"./gameBoard.reducer\";\r\nimport socketMdl from \"./socketMiddleware\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nexport default function configureStore() {\r\n    const middlewareEnhancer = applyMiddleware(...socketMdl);\r\n    const composedEnhancers = composeWithDevTools(middlewareEnhancer);\r\n    // combine all reducers to create  root reducer\r\n    const rootReducer = combineReducers({\r\n        views:viewsReducer,\r\n        misc:miscReducer,\r\n        board:gameBoredReducer\r\n    });\r\n    return createStore(rootReducer,{},composedEnhancers);\r\n};"],"sourceRoot":""}